<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adapters on FINTLabs Technical Docs</title>
    <link>https://fintlabs.github.io/adapter/</link>
    <description>Recent content in Adapters on FINTLabs Technical Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Apr 2017 11:49:04 +0200</lastBuildDate>
    
	<atom:link href="https://fintlabs.github.io/adapter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Technical Overview Of Adapters</title>
      <link>https://fintlabs.github.io/adapter/overview/</link>
      <pubDate>Wed, 26 Apr 2017 11:49:04 +0200</pubDate>
      
      <guid>https://fintlabs.github.io/adapter/overview/</guid>
      <description>Introduction A Common API is a API on a business application. The Common API gets and sends information to/from a business application through an adapter. This document aims to describe how an adapter should be implemented.
Architectural overview - Common API Information Models The Common API consist of standardized information models that will presented as resources in the Consumer API. Each Common API can consist of one or more information models.</description>
    </item>
    
    <item>
      <title>Develop adapters</title>
      <link>https://fintlabs.github.io/adapter/guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fintlabs.github.io/adapter/guidelines/</guid>
      <description>Introduction This articel amins to make you able to develop a FINT adapter.
Getting started A good startingpoint for developing an adapter is to go throug our quick tutorial:
 Java C#  After that you can setup your adapter skeleton of choice:
 Java skeleton C# (.NET core) skeleton  What does the skeleton do and what do you need to do? The skeletons has all the code to:</description>
    </item>
    
    <item>
      <title>Models and Common API</title>
      <link>https://fintlabs.github.io/adapter/models/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fintlabs.github.io/adapter/models/</guid>
      <description>Introduction FINT Information models are models used in the Common API. The models contains information resoures the county council use in their day to day tasks. FINT aims to develop this model to contain vital information in all the areas the county council operates in. This means that every new version will contain more information and an new areas.
Versioning FINT is using semantic versioning for its models:
 MAJOR version have backwards incompatible changes MINOR (feature release) versions add functionality in a backwards-compatible manner, and PATCH (bug fixes) versions add backwards-compatible bug fixes.</description>
    </item>
    
    <item>
      <title>Adapter Update Event Flow</title>
      <link>https://fintlabs.github.io/adapter/event-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fintlabs.github.io/adapter/event-flow/</guid>
      <description>FINT Adapter Event Flow for Updates The general flow between FINT and adapters are:
 Adapter subscribes to events using the SSE endpoint FINT delivers events on the SSE stream Adapter accepts the event by POSTing to the status endpoint. There is a 2-minute timeout on accepting events. If you use the adapter skeleton this is already handled. Adapter responds to the event by POSTing to the response endpoint. There is a 15-minute timeout on responding to events.</description>
    </item>
    
    <item>
      <title>Tutorial: Java SSE adapter</title>
      <link>https://fintlabs.github.io/adapter/tut-java-sse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fintlabs.github.io/adapter/tut-java-sse/</guid>
      <description>Introduction This tutorial will lead you through the process of setting up and adapter to communicate with the Play-With-FINT-Adapter service.
Setting up the environment Clone the skeleton $ git clone https://github.com/FINTprosjektet/fint-sse-adapter-skeleton.git my-adapter $ cd my-adapter $ rm -rf .git  Open the project in your favorite IDE This is a Gradle project so make sure to import the Gradle dependencies. You can either do it in the IDE or in the commandline:</description>
    </item>
    
    <item>
      <title>Tutorial: .Net SSE adapter</title>
      <link>https://fintlabs.github.io/adapter/tut-dotnet-sse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fintlabs.github.io/adapter/tut-dotnet-sse/</guid>
      <description>Introduction This tutorial will lead you through the process of setting up and adapter to communicate with the Play-With-FINT-Adapter service.
Setting up the enviornment Clone the skeleton $ git clone https://github.com/FINTprosjektet/Fint.Sse.Adapter.Skeleton.git my-adapter $ cd my-adapter $ rm -rf .git  Open the project in our favorite IDE This is a netcoreapp2.0\netstandard2.0 project. You need to import the dependencies. You can either do it in the IDE or in the commandline.</description>
    </item>
    
  </channel>
</rss>